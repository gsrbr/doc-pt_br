<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 0773339dce767078f1ee0e55cc1c0428e02ae0ad Maintainer: leonardolara Status: ready -->
<refentry xml:id="function.openssl-pkcs7-encrypt" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>openssl_pkcs7_encrypt</refname>
  <refpurpose>Criptografa uma mensagem S/MIME</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>openssl_pkcs7_encrypt</methodname>
   <methodparam><type>string</type><parameter>input_filename</parameter></methodparam>
   <methodparam><type>string</type><parameter>output_filename</parameter></methodparam>
   <methodparam><type class="union"><type>OpenSSLCertificate</type><type>array</type><type>string</type></type><parameter>certificate</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>null</type></type><parameter>headers</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>cipher_algo</parameter><initializer><constant>OPENSSL_CIPHER_AES_128_CBC</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>openssl_pkcs7_encrypt</function> pega o conteúdo do arquivo
   chamado <parameter>input_filename</parameter> e o criptografa usando uma cifra RC2
   de 40 bits para que só possa ser lido pelos destinatários pretendidos
   especificados pelo certificado especificado em <parameter>certificate</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>input_filename</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>output_filename</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>certificate</parameter></term>
     <listitem>
      <para>
       Um certificado X.509 único ou um array de certificados X.509.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>headers</parameter></term>
     <listitem>
      <para>
       <parameter>headers</parameter> é um array de cabeçalhos que
       serão anexados aos dados após serem criptografados.
      </para>
      <para>
       <parameter>headers</parameter> pode ser um array associativo
       codificado pelo nome do cabeçalho ou um array indexado, onde cada elemento contém
       uma única linha de cabeçalho.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       <parameter>flags</parameter> pode ser usado ​​para especificar opções que afetam
       o processo de codificação - veja <link linkend="openssl.pkcs7.flags">constantes
       PKCS7</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cipher_algo</parameter></term>
     <listitem>
      <para>
       Uma das <link linkend="openssl.ciphers">constantes de método de criptografia</link>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.1.0</entry>
      <entry>
       O algoritmo de criptografia padrão (<parameter>cipher_algo</parameter>) agora é
       AES-128-CBC (<constant>OPENSSL_CIPHER_AES_128_CBC</constant>). Anteriormente,
       PKCS7/CMS era usado (<constant>OPENSSL_CIPHER_RC2_40</constant>).
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>certificate</parameter> agora aceita uma instância de <classname>OpenSSLCertificate</classname>;
       anteriormente, um &resource; do tipo <literal>OpenSSL X.509 CSR</literal> era aceito.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>openssl_pkcs7_encrypt</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// A mensagem que se deseja criptografar e enviar ao agente
// secreto em campo, conhecido como Falcão Noturno. O certificado
// dele fica no arquivo falcão_noturno.pem.
$data = <<<EOD
Falcão Noturno,

Segredo absoluto, apenas para seus cuidados!

O inimigo se aproxima! Encontre-me no Café às 8:30 da manhã
para coletar seu passaporte falsificado!

QG
EOD;

// carrega a chave
$key = file_get_contents("falcão_noturno.pem");

// grava mensagem no arquivo
$fp = fopen("msg.txt", "w");
fwrite($fp, $data);
fclose($fp);

// criptografa a mensagem
if (openssl_pkcs7_encrypt("msg.txt", "crip.txt", $key,
    array("To" => "falcao_noturno@example.com", // sintaxe de chaves
          "From: QG <qg@example.com>", // sintaxe de índice
          "Subject" => "Ultra secreto"))) {
    // mensagem criptografada - enviar!
    exec(ini_get("sendmail_path") . " < crip.txt");
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
