<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 22583751fbfdaa3eaa41aeb6470d1343f5cb2c78 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="function.yaz-ccl-parse" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>yaz_ccl_parse</refname>
  <refpurpose>Invoca o analisador CCL</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>yaz_ccl_parse</methodname>
   <methodparam><type>resource</type><parameter>id</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">result</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta função invoca um analisador CCL. Ela converte uma consulta CCL FIND fornecida em
   uma consulta RPN que pode ser passada para a função <function>yaz_search</function>
   para realizar uma busca.
  </para>
  <para>
   Para definir um conjunto de campos CCL válidos, chame <function>yaz_ccl_conf</function>
   antes desta função.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>id</parameter></term>
     <listitem>
      <para>
       O recurso de conexão retornado por <function>yaz_connect</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       A consulta CCL FIND.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem>
      <para>
       Se a função foi executada com sucesso, este será um array
       contendo a consulta RPN válida sob a chave <literal>rpn</literal>.
      </para>
      <para>
       Em caso de falha, três índices são definidos neste array para indicar a causa
       da falha:
       <itemizedlist>
        <listitem>
         <para>
          <literal>errorcode</literal> - o código de erro CCL (inteiro)
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>errorstring</literal> - a string de erro CCL
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>errorpos</literal> - posição aproximada na consulta de falha
         (o inteiro é a posição do caractere)
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Análise CCL</title>
   <para>
    Tentaremos pesquisar usando CCL. No exemplo abaixo,
    <literal>$ccl</literal> é uma consulta CCL.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

yaz_ccl_conf($id, $fields);  // veja o exemplo para yaz_ccl_conf
if (!yaz_ccl_parse($id, $ccl, $cclresult)) {
    echo 'Erro: ' . $cclresult["errorstring"];
} else {
    $rpn = $cclresult["rpn"];
    yaz_search($id, "rpn", $rpn);
}
?>
]]>
   </programlisting>
  </example>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
