<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 96c9d88bad9a7d7d44bfb7f26c226df7ee9ddf26 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="function.yaz-search" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>yaz_search</refname>
  <refpurpose>Prepara para uma busca</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>yaz_search</methodname>
   <methodparam><type>resource</type><parameter>id</parameter></methodparam>
   <methodparam><type>string</type><parameter>type</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>yaz_search</function> prepara uma busca na conexão
   fornecida.
  </para>
  <para>
   Assim como <function>yaz_connect</function>, esta função não é bloqueante e
   apenas prepara uma pesquisa a ser executada posteriormente quando
   <function>yaz_wait</function> for chamada.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>id</parameter></term>
     <listitem>
      <para>
       O recurso de conexão retornado por <function>yaz_connect</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem>
      <para>
       Este parâmetro representa o tipo de consulta - apenas <literal>"rpn"</literal>
       é suportado atualmente, caso em que o terceiro argumento especifica uma consulta do Tipo 1
       na notação de consulta prefixada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       A consulta RPN é uma representação textual da consulta Tipo 1, conforme
       definida pelo padrão Z39.50. No entanto, na representação textual
       usada pelo YAZ, é utilizada uma notação de prefixo, ou seja, o operador
       precede os operandos. A string de consulta é uma sequência de tokens onde
       espaços em branco são ignorados, a menos que estejam entre aspas duplas. Tokens que começam
       com um caractere arroba (<literal>@</literal>) são considerados operadores,
       caso contrário, são tratados como termos de pesquisa.
      </para>
      <table>
       <title>Operadores RPN</title>
       <tgroup cols="2">
        <colspec colwidth="1*" colname="construct"/>
        <colspec colwidth="2*" colname="description"/>
        <thead>
         <row>
          <entry>Construção</entry>
          <entry>Descrição</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry><literal>@and</literal> consulta1 consulta2</entry>
          <entry>intersecção de consulta1 e consulta2</entry>
         </row>
         <row>
          <entry><literal>@or</literal> consulta1 consulta2</entry>
          <entry>união de consulta1 e consulta2</entry>
         </row>
         <row>
          <entry><literal>@not</literal> consulta1 consulta2</entry>
          <entry>consulta1 e não consulta2</entry>
         </row>
         <row>
          <entry><literal>@set</literal> nome</entry>
          <entry>referência de conjunto de resultados</entry>
         </row>
         <row>
          <entry><literal>@attrset</literal> consulta de definição</entry>
          <entry>
           especifica definição de atributo para a consulta. Esta construção é permitida somente
           uma vez - no início da consulta completa
          </entry>
         </row>
         <row>
          <entry><literal>@attr</literal> [set] tipo=valor consulta</entry>
          <entry>
           aplica atributo à consulta. O tipo e o valor são inteiros
           especificando o tipo e o valor do atributo, respectivamente.
           O conjunto, se fornecido, especifica o conjunto de atributos.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
      <para>
       Pode-se encontrar informações sobre atributos no site
       <link xlink:href="&url.yaz-loc-bib1;">Z39.50 Maintenance
       Agency</link>.
      </para>
      <note>
       <para>
        Se desejar usar uma notação mais amigável,
        use o analisador CCL - funções <function>yaz_ccl_conf</function> e
        <function>yaz_ccl_parse</function>.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemplos de consulta</title>
   <para>
    Pode-se pesquisar por termos simples, como este:
    <screen>
<![CDATA[
computer
]]>
    </screen>
    que corresponde a documentos onde existe a ocorrência de "computer". Nenhum atributo é
    especificado.
   </para>
   <para>
    A consulta
    <screen>
<![CDATA[
"knuth donald"
]]>
    </screen>
    corresponde a documentos onde "knuth donald" ocorre (desde que o
    servidor suporte pesquisa de frase).
   </para>
   <para>
    Esta consulta aplica dois atributos para a mesma frase.
    <screen>@attr 1=1003 @attr 4=1 "knuth donald"</screen>
    O primeiro atributo é do tipo 1 (uso Bib-1), o valor do atributo é 1003
    (Autor).
    O segundo atributo é do tipo 4 (estrutura), o valor é 1 (frase),
    portanto, deve corresponder a documentos em que Donald Knuth é o autor.
   </para>
   <para>
    A consulta
    <screen>
<![CDATA[
@and @or a b @not @or c d e
]]>
    </screen>
    ficaria em notação infixa como <literal>(a or b) and ((c or d) not
    e)</literal>.
   </para>
   <para>
    Outra, mais complexa:
    <screen>
<![CDATA[
@attrset gils @and @attr 1=4 art @attr 1=2000 company
]]>
    </screen>
    A consulta como um todo utiliza o conjunto de atributos GILS. A consulta corresponde a
    documentos em que <literal>art</literal> ocorre no título (GILS,BIB-1)
    e em que <literal>company</literal> ocorre como Distribuidor (GILS).
   </para>
  </example>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
