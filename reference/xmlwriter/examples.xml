<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 2e8ef0a1bd98243cb2c6c5c627a195bb53a7a440 Maintainer: leonardolara Status: ready -->
<chapter xml:id="xmlwriter.examples" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.examples;
 <section xml:id="example.xmlwriter-simple">
  <title>Criando um documento XML simples</title>
  <para>
   Este exemplo mostra como usar o XMLWriter para criar um documento XML na memória.
  </para>
  <para>
   <example>
    <title>Criando um documento XML simples</title>
    <programlisting role="php">
<![CDATA[
<?php

$xw = xmlwriter_open_memory();
xmlwriter_set_indent($xw, 1);
$res = xmlwriter_set_indent_string($xw, ' ');

xmlwriter_start_document($xw, '1.0', 'UTF-8');

// Um primeiro elemento
xmlwriter_start_element($xw, 'tag1');

// Atributo 'att1' para o elemento 'tag1'
xmlwriter_start_attribute($xw, 'att1');
xmlwriter_text($xw, 'valueofatt1');
xmlwriter_end_attribute($xw);

xmlwriter_write_comment($xw, 'isto é um comentário.');

// Inicia um elemento filho
xmlwriter_start_element($xw, 'tag11');
xmlwriter_text($xw, 'Este é um texto de exemplo, ä');
xmlwriter_end_element($xw); // tag11

xmlwriter_end_element($xw); // tag1


// CDATA
xmlwriter_start_element($xw, 'testec');
xmlwriter_write_cdata($xw, "Isto é conteúdo cdata");
xmlwriter_end_element($xw); // testec

xmlwriter_start_element($xw, 'testec');
xmlwriter_start_cdata($xw);
xmlwriter_text($xw, "teste cdata2");
xmlwriter_end_cdata($xw);
xmlwriter_end_element($xw); // testec

// Uma instrução de processamento
xmlwriter_start_pi($xw, 'php');
xmlwriter_text($xw, '$foo=2;echo $foo;');
xmlwriter_end_pi($xw);

xmlwriter_end_document($xw);

echo xmlwriter_output_memory($xw);
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<tag1 att1="valueofatt1">
 <!--isto é um comentário.-->
 <tag11>Este é um texto de exemplo, ä</tag11>
</tag1>
<testc><![CDATA[Isto é conteúdo cdata]]]]><![CDATA[></testc>
<testc><![CDATA[teste cdata2]]]]><![CDATA[></testc>
<?php $foo=2;echo $foo;?>
]]>
    </screen>
   </example>
  </para>
 </section>

 <section xml:id="example.xmlwriter-namespace">
  <title>Trabalhando com namespaces XML</title>
  <para>
   Este exemplo mostra como criar elementos XML com namespace.
  </para>
  <para>
   <example>
    <title>Trabalhando com namespaces XML</title>
    <programlisting role="php">
<![CDATA[
<?php

$xw = xmlwriter_open_memory();
xmlwriter_set_indent($xw, 1);
$res = xmlwriter_set_indent_string($xw, ' ');

xmlwriter_start_document($xw, '1.0', 'UTF-8');
// Um primeiro elemento
xmlwriter_start_element_ns($xw,'prefix', 'books', 'uri');
xmlwriter_start_attribute($xw, 'isbn');

xmlwriter_start_attribute_ns($xw, 'prefix', 'isbn', 'uri');
xmlwriter_end_attribute($xw);

xmlwriter_end_attribute($xw);

xmlwriter_text($xw, 'book1');
xmlwriter_end_element($xw);

xmlwriter_end_document($xw);

echo xmlwriter_output_memory($xw);
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<prefix:books isbn="" prefix:isbn="" xmlns:prefix="uri">book1</prefix:books>
]]>
    </screen>
   </example>
  </para>
 </section>

 <section xml:id="example.xmlwriter-oop">
  <title>Trabalhando com a API Orientada a Objeto</title>
  <para>
   Este exemplo mostra como trabalhar com a API orientada a objetos do XMLWriter.
  </para>
  <para>
   <example>
    <title>Trabalhando com a API Orientada a Objeto</title>
    <programlisting role="php">
<![CDATA[
<?php

$xw = new XMLWriter();
$xw->openMemory();
$xw->startDocument("1.0");
$xw->startElement("book");
$xw->text("example");
$xw->endElement();
$xw->endDocument();
echo $xw->outputMemory();
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
<?xml version="1.0"?>
<book>example</book>
]]>
    </screen>
   </example>
  </para>
 </section>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

