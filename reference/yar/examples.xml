<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 914b97130aed191518791045b93b6f858ef5a139 Maintainer: leonardolara Status: ready -->

<chapter xml:id="yar.examples" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.examples;
 <example>
  <title>Exemplo de servidor Yar</title>
  <programlisting role="php">
<![CDATA[
<?php

/* suponha que esta página pode ser acessada por http://example.com/operator.php */

class Operator {

    /**
     * Add two operands
     * @param interge
     * @return interge
     */
    public function add($a, $b) {
        return $this->_add($a, $b);
    }

    /**
     * Sub
     */
    public function sub($a, $b) {
        return $a - $b;
    }

    /**
     * Mul
     */
    public function mul($a, $b) {
        return $a * $b;
    }

    /**
     * Protected methods will not be exposed
     * @param interge
     * @return interge
     */
    protected function _add($a, $b) {
        return $a + $b;
    }
}

$server = new Yar_Server(new Operator());
$server->handle();
?>
]]>
  </programlisting>
 </example>

 <example>
  <title>Acesse o servidor no navegador (solicitação GET)</title>
  &example.outputs.similar;
  <mediaobject>
   <alt>Informações do servidor Yar</alt>
   <imageobject>
    <imagedata fileref="en/reference/yar/image/yar.png" scalefit="1" width="700px" />
   </imageobject>
  </mediaobject>
 </example>

 <example>
  <title>Exemplo de cliente Yar</title>
  <programlisting role="php">
<![CDATA[
<?php
$client = new yar_client("http://example.com/operator.php");

/* chama diretamente */
var_dump($client->add(1, 2));

/* ou através do método call */
var_dump($client->call("add", array(3, 2)));


/* __add não pode ser chamado */
var_dump($client->_add(1, 2));
?>
]]>
  </programlisting>
  &example.outputs.similar;
   <screen>
<![CDATA[
int(3)
int(5)
PHP Fatal error:  Uncaught exception 'Yar_Server_Exception' with message 'call to api Operator::_add() failed' in *
]]>
   </screen>
 </example>

 <example>
  <title>Yar Concurrent Client Example</title>
  <programlisting role="php">
<![CDATA[
<?php
function callback($ret, $callinfo) {
    echo $callinfo['method'] , " result: ", $ret , "\n";
}

/* registra chamadas assíncronas para serviços remotos */
Yar_Concurrent_Client::call("http://example.com/operator.php", "add", array(1, 2), "callback");
Yar_Concurrent_Client::call("http://example.com/operator.php", "sub", array(2, 1), "callback");
Yar_Concurrent_Client::call("http://example.com/operator.php", "mul", array(2, 2), "callback");

/* envia todas as solicitações e aguarda resposta */
Yar_Concurrent_Client::loop();
?>
]]>
  </programlisting>
  &example.outputs.similar;
  <screen>
<![CDATA[
mul result: 4
sub result: 1
add result: 3
]]>
   </screen>
 </example>

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
