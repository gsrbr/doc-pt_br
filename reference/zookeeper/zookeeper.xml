<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: eadc8dd73577ca16f7a1520634d5f3656e9bd4d3 Maintainer: leonardolara Status: ready -->

<reference xml:id="class.zookeeper"
 role="class"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns="http://docbook.org/ns/docbook">
 <title>A classe Zookeeper</title>
 <titleabbrev>Zookeeper</titleabbrev>

 <partintro>

<!-- {{{ Zookeeper intro -->
  <section xml:id="zookeeper.intro">
   &reftitle.intro;
   <para>
    Representa a sess√£o do ZooKeeper.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="zookeeper.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Zookeeper</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Zookeeper</classname>
     </ooclass>

    </classsynopsisinfo>
<!-- }}} -->

<!-- {{{ Class methods -->
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.zookeeper')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])">
     <xi:fallback />
    </xi:include>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.zookeeper')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])">
     <xi:fallback />
    </xi:include>
<!-- }}} -->

<!-- {{{ Class constants -->
    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.perm-read">PERM_READ</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.perm-write">PERM_WRITE</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.perm-create">PERM_CREATE</varname>
     <initializer>4</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.perm-delete">PERM_DELETE</varname>
     <initializer>8</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.perm-admin">PERM_ADMIN</varname>
     <initializer>16</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.perm-all">PERM_ALL</varname>
     <initializer>31</initializer>
    </fieldsynopsis>

    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.ephemeral">EPHEMERAL</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.sequence">SEQUENCE</varname>
     <initializer>2</initializer>
    </fieldsynopsis>

    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.log-level-error">LOG_LEVEL_ERROR</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.log-level-warn">LOG_LEVEL_WARN</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.log-level-info">LOG_LEVEL_INFO</varname>
     <initializer>3</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.log-level-debug">LOG_LEVEL_DEBUG</varname>
     <initializer>4</initializer>
    </fieldsynopsis>

    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.expired-session-state">EXPIRED_SESSION_STATE</varname>
     <initializer>-112</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.auth-failed-state">AUTH_FAILED_STATE</varname>
     <initializer>-113</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.connecting-state">CONNECTING_STATE</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.associating-state">ASSOCIATING_STATE</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.connected-state">CONNECTED_STATE</varname>
     <initializer>3</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.readonly-state">READONLY_STATE</varname>
     <initializer>5</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.notconnected-state">NOTCONNECTED_STATE</varname>
     <initializer>999</initializer>
    </fieldsynopsis>

    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.created-event">CREATED_EVENT</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.deleted-event">DELETED_EVENT</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.changed-event">CHANGED_EVENT</varname>
     <initializer>3</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.child-event">CHILD_EVENT</varname>
     <initializer>4</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.session-event">SESSION_EVENT</varname>
     <initializer>-1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.notwatching-event">NOTWATCHING_EVENT</varname>
     <initializer>-2</initializer>
    </fieldsynopsis>

    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.systemerror">SYSTEMERROR</varname>
     <initializer>-1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.runtimeinconsistency">RUNTIMEINCONSISTENCY</varname>
     <initializer>-2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.datainconsistency">DATAINCONSISTENCY</varname>
     <initializer>-3</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.connectionloss">CONNECTIONLOSS</varname>
     <initializer>-4</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.marshallingerror">MARSHALLINGERROR</varname>
     <initializer>-5</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.unimplemented">UNIMPLEMENTED</varname>
     <initializer>-6</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.operationtimeout">OPERATIONTIMEOUT</varname>
     <initializer>-7</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.badarguments">BADARGUMENTS</varname>
     <initializer>-8</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.invalidstate">INVALIDSTATE</varname>
     <initializer>-9</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.newconfignoquorum">NEWCONFIGNOQUORUM</varname>
     <initializer>-13</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.reconfiginprogress">RECONFIGINPROGRESS</varname>
     <initializer>-14</initializer>
    </fieldsynopsis>

    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.ok">OK</varname>
     <initializer>0</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.apierror">APIERROR</varname>
     <initializer>-100</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.nonode">NONODE</varname>
     <initializer>-101</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.noauth">NOAUTH</varname>
     <initializer>-102</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.badversion">BADVERSION</varname>
     <initializer>-103</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.nochildrenforephemerals">NOCHILDRENFOREPHEMERALS</varname>
     <initializer>-108</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.nodeexists">NODEEXISTS</varname>
     <initializer>-110</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.notempty">NOTEMPTY</varname>
     <initializer>-111</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.sessionexpired">SESSIONEXPIRED</varname>
     <initializer>-112</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.invalidcallback">INVALIDCALLBACK</varname>
     <initializer>-113</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.invalidacl">INVALIDACL</varname>
     <initializer>-114</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.authfailed">AUTHFAILED</varname>
     <initializer>-115</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.closing">CLOSING</varname>
     <initializer>-116</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.nothing">NOTHING</varname>
     <initializer>-117</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.sessionmoved">SESSIONMOVED</varname>
     <initializer>-118</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.notreadonly">NOTREADONLY</varname>
     <initializer>-119</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.ephemeralonlocalsession">EPHEMERALONLOCALSESSION</varname>
     <initializer>-120</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.nowatcher">NOWATCHER</varname>
     <initializer>-121</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="zookeeper.constants.reconfigdisabled">RECONFIGDISABLED</varname>
     <initializer>-122</initializer>
    </fieldsynopsis>
<!-- }}} -->

   </classsynopsis>
<!-- }}} -->

  </section>

<!-- {{{ Constants -->
  <section xml:id="zookeeper.class.constants">
   &reftitle.constants;

<!-- {{{ Constants Permissions -->
   <section xml:id="zookeeper.constants.perms">
    <title>Permiss√µes do <acronym>ZooKeeper</acronym></title>
    <variablelist>

     <varlistentry xml:id="zookeeper.constants.perm-read">
      <term><constant>Zookeeper::PERM_READ</constant></term>
      <listitem>
       <para>Pode ler o valor dos n√≥s e listar seus filhos</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.perm-write">
      <term><constant>Zookeeper::PERM_WRITE</constant></term>
      <listitem>
       <para>Pode definir o valor dos n√≥s</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.perm-create">
      <term><constant>Zookeeper::PERM_CREATE</constant></term>
      <listitem>
       <para>Pode criar filhos</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.perm-delete">
      <term><constant>Zookeeper::PERM_DELETE</constant></term>
      <listitem>
       <para>Pode excluir filhos</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.perm-admin">
      <term><constant>Zookeeper::PERM_ADMIN</constant></term>
      <listitem>
       <para>Pode executar set_acl()</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.perm-all">
      <term><constant>Zookeeper::PERM_ALL</constant></term>
      <listitem>
       <para>Todas as op√ß√µes acima combinadas com opera√ß√£o bin√°ria OU</para>
      </listitem>
     </varlistentry>

    </variablelist>
   </section>
<!-- }}} -->

<!-- {{{ Constants Create Flags -->
   <section xml:id="zookeeper.constants.create-flags">
    <title>Op√ß√µes de cria√ß√£o do <acronym>ZooKeeper</acronym></title>
    <variablelist>

     <varlistentry xml:id="zookeeper.constants.ephemeral">
      <term><constant>Zookeeper::EPHEMERAL</constant></term>
      <listitem>
       <para>Se a op√ß√£o Zookeeper::EPHEMERAL estiver definida, o n√≥ ser√° removido automaticamente se a sess√£o do cliente terminar.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.sequence">
      <term><constant>Zookeeper::SEQUENCE</constant></term>
      <listitem>
       <para>Se a op√ß√£o Zookeeper::SEQUENCE estiver definida um n√∫mero de sequ√™ncia √∫nico e crescente ser√° anexado ao nome do caminho. O n√∫mero de sequ√™ncia tem sempre um comprimento fixo de 10 d√≠gitos, preenchido com 0.</para>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>
<!-- }}} -->

<!-- {{{ Constants Log Levels -->
   <section xml:id="zookeeper.constants.log-levels">
    <title>N√≠veis de registro do <acronym>ZooKeeper</acronym></title>
    <variablelist>

     <varlistentry xml:id="zookeeper.constants.log-level-error">
      <term><constant>Zookeeper::LOG_LEVEL_ERROR</constant></term>
      <listitem>
       <para>Emite apenas mensagens de erro</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.log-level-warn">
      <term><constant>Zookeeper::LOG_LEVEL_WARN</constant></term>
      <listitem>
       <para>Emite erros/avisos</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.log-level-info">
      <term><constant>Zookeeper::LOG_LEVEL_INFO</constant></term>
      <listitem>
       <para>Emite grandes mensagens de a√ß√£o al√©m de erros/avisos</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.log-level-debug">
      <term><constant>Zookeeper::LOG_LEVEL_DEBUG</constant></term>
      <listitem>
       <para>Emite tudo</para>
      </listitem>
     </varlistentry>

    </variablelist>
   </section>
<!-- }}} -->

<!-- {{{ Constants States -->
   <section xml:id="zookeeper.constants.states">
    <title>Estados do <acronym>ZooKeeper</acronym></title>
    <variablelist>

     <varlistentry xml:id="zookeeper.constants.expired-session-state">
      <term><constant>Zookeeper::EXPIRED_SESSION_STATE</constant></term>
      <listitem>
       <para>Conectado, mas a sess√£o expirou</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.auth-failed-state">
      <term><constant>Zookeeper::AUTH_FAILED_STATE</constant></term>
      <listitem>
       <para>Conectado, mas a autentica√ß√£o falhou</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.connecting-state">
      <term><constant>Zookeeper::CONNECTING_STATE</constant></term>
      <listitem>
       <para>Conectando</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.associating-state">
      <term><constant>Zookeeper::ASSOCIATING_STATE</constant></term>
      <listitem>
       <para>Associando</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.connected-state">
      <term><constant>Zookeeper::CONNECTED_STATE</constant></term>
      <listitem>
       <para>Conectado</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.readonly-state">
      <term><constant>Zookeeper::READONLY_STATE</constant></term>
      <listitem>
       <para>A FAZER: ajude-nos a melhorar esta extens√£o.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.notconnected-state">
      <term><constant>Zookeeper::NOTCONNECTED_STATE</constant></term>
      <listitem>
       <para>Falha na conex√£o</para>
      </listitem>
     </varlistentry>

    </variablelist>
   </section>
<!-- }}} -->

<!-- {{{ Constants Watch Types -->
   <section xml:id="zookeeper.constants.watch-types">
    <title>Tipos de Observa√ß√£o do <acronym>ZooKeeper</acronym></title>
    <variablelist>

     <varlistentry xml:id="zookeeper.constants.created-event">
      <term><constant>Zookeeper::CREATED_EVENT</constant></term>
      <listitem>
       <para>Um n√≥ foi criado</para>
       <para>Isso √© gerado apenas por observa√ß√µes em n√≥s inexistentes. Essas observa√ß√µes s√£o definidas usando Zookeeper::exists.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.deleted-event">
      <term><constant>Zookeeper::DELETED_EVENT</constant></term>
      <listitem>
       <para>Um n√≥ foi exclu√≠do</para>
       <para>Isso √© gerado apenas por inspe√ß√µes em n√≥s. Essas inspe√ß√µes s√£o definidas usando Zookeeper::exists e Zookeeper::get.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.changed-event">
      <term><constant>Zookeeper::CHANGED_EVENT</constant></term>
      <listitem>
       <para>Um n√≥ foi alterado</para>
       <para>Isso √© gerado apenas por inspe√ß√µes em n√≥s. Essas inspe√ß√µes s√£o definidas usando Zookeeper::exists e Zookeeper::get.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.child-event">
      <term><constant>Zookeeper::CHILD_EVENT</constant></term>
      <listitem>
       <para>Ocorreu uma altera√ß√£o na lista de filhos</para>
       <para>Isso √© gerado apenas por observa√ß√µes na lista de filhos de um n√≥. Essas observa√ß√µes s√£o definidas usando Zookeeper::getChildren.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.session-event">
      <term><constant>Zookeeper::SESSION_EVENT</constant></term>
      <listitem>
       <para>Uma sess√£o foi perdida</para>
       <para>Isso √© gerado quando um cliente perde contato ou se reconecta com um servidor.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.notwatching-event">
      <term><constant>Zookeeper::NOTWATCHING_EVENT</constant></term>
      <listitem>
       <para>Uma observa√ß√£o foi removida</para>
       <para>Isso √© gerado quando o servidor, por algum motivo, provavelmente por uma restri√ß√£o de recursos, n√£o monitora mais um n√≥ para um cliente.</para>
      </listitem>
     </varlistentry>

    </variablelist>
   </section>
<!-- }}} -->

<!-- {{{ Constants System and Server-side Errors -->
   <section xml:id="zookeeper.constants.system-n-server-side-errors">
    <title>Erros do sistema e do servidor do <acronym>ZooKeeper</acronym></title>
    <variablelist>
     <varlistentry xml:id="zookeeper.constants.systemerror">
      <term><constant>Zookeeper::SYSTEMERROR</constant></term>
      <listitem>
       <para>Isso nunca √© gerado pelo servidor e n√£o deve ser usado para outra finalidade que n√£o seja indicar um intervalo. Especificamente, c√≥digos de erro maiores que esse valor, mas menores que Zookeeper::APIERROR, s√£o erros de sistema.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.runtimeinconsistency">
      <term><constant>Zookeeper::RUNTIMEINCONSISTENCY</constant></term>
      <listitem>
       <para>Uma inconsist√™ncia de tempo de execu√ß√£o foi encontrada.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.datainconsistency">
      <term><constant>Zookeeper::DATAINCONSISTENCY</constant></term>
      <listitem>
       <para>Foi encontrada uma inconsist√™ncia de dados.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.connectionloss">
      <term><constant>Zookeeper::CONNECTIONLOSS</constant></term>
      <listitem>
       <para>A conex√£o com o servidor foi perdida.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.marshallingerror">
      <term><constant>Zookeeper::MARSHALLINGERROR</constant></term>
      <listitem>
       <para>Erro ao empacotar ou desempacotar dados.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.unimplemented">
      <term><constant>Zookeeper::UNIMPLEMENTED</constant></term>
      <listitem>
       <para>A opera√ß√£o n√£o foi implementada.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.operationtimeout">
      <term><constant>Zookeeper::OPERATIONTIMEOUT</constant></term>
      <listitem>
       <para>Atingido o tempo limite de opera√ß√£o.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.badarguments">
      <term><constant>Zookeeper::BADARGUMENTS</constant></term>
      <listitem>
       <para>Argumentos inv√°lidos.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.invalidstate">
      <term><constant>Zookeeper::INVALIDSTATE</constant></term>
      <listitem>
       <para>Estado de identificador inv√°lido.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.newconfignoquorum">
      <term><constant>Zookeeper::NEWCONFIGNOQUORUM</constant></term>
      <listitem>
       <para>N√£o h√° quorum de nova configura√ß√£o conectado e atualizado com o l√≠der da √∫ltima configura√ß√£o confirmada - tente invocar a reconfigura√ß√£o depois que novos servidores forem conectados e sincronizados.</para>
       <para>Dispon√≠vel a partir do ZooKeeper 3.5.0</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.reconfiginprogress">
      <term><constant>Zookeeper::RECONFIGINPROGRESS</constant></term>
      <listitem>
       <para>Reconfigura√ß√£o solicitada enquanto outra reconfigura√ß√£o est√° em andamento. Isso n√£o √© suportado no momento. Tente novamente.</para>
       <para>Dispon√≠vel a partir do ZooKeeper 3.5.0</para>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>
<!-- }}} -->

<!-- {{{ Constants API Errors -->
   <section xml:id="zookeeper.constants.api-errors">
    <title>Erros da API do <acronym>ZooKeeper</acronym></title>
    <variablelist>
     <varlistentry xml:id="zookeeper.constants.ok">
      <term><constant>Zookeeper::OK</constant></term>
      <listitem>
       <para>Est√° tudo bem.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.apierror">
      <term><constant>Zookeeper::APIERROR</constant></term>
      <listitem>
       <para>Isso nunca √© gerado pelo servidor e n√£o deve ser usado para outra finalidade que n√£o seja indicar um intervalo. Especificamente, c√≥digos de erro maiores que esse valor s√£o erros de API (enquanto valores menores que isso indicam um Zookeeper::SYSTEMERROR).</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.nonode">
      <term><constant>Zookeeper::NONODE</constant></term>
      <listitem>
       <para>O n√≥ n√£o existe.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.noauth">
      <term><constant>Zookeeper::NOAUTH</constant></term>
      <listitem>
       <para>N√£o autenticado.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.badversion">
      <term><constant>Zookeeper::BADVERSION</constant></term>
      <listitem>
       <para>Conflito de vers√£o.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.nochildrenforephemerals">
      <term><constant>Zookeeper::NOCHILDRENFOREPHEMERALS</constant></term>
      <listitem>
       <para>N√≥s ef√™meros podem n√£o ter filhos.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.nodeexists">
      <term><constant>Zookeeper::NODEEXISTS</constant></term>
      <listitem>
       <para>O n√≥ j√° existe.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.notempty">
      <term><constant>Zookeeper::NOTEMPTY</constant></term>
      <listitem>
       <para>O n√≥ tem filhos.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.sessionexpired">
      <term><constant>Zookeeper::SESSIONEXPIRED</constant></term>
      <listitem>
       <para>A sess√£o foi expirada pelo servidor.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.invalidcallback">
      <term><constant>Zookeeper::INVALIDCALLBACK</constant></term>
      <listitem>
       <para>Fun√ß√£o de retorno inv√°lida especificada.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.invalidacl">
      <term><constant>Zookeeper::INVALIDACL</constant></term>
      <listitem>
       <para>ACL inv√°lida especificada.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.authfailed">
      <term><constant>Zookeeper::AUTHFAILED</constant></term>
      <listitem>
       <para>A autentica√ß√£o do cliente falhou.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.closing">
      <term><constant>Zookeeper::CLOSING</constant></term>
      <listitem>
       <para>O ZooKeeper est√° fechando.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.nothing">
      <term><constant>Zookeeper::NOTHING</constant></term>
      <listitem>
       <para>(n√£o √© erro) Nenhuma resposta do servidor ao processo.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.sessionmoved">
      <term><constant>Zookeeper::SESSIONMOVED</constant></term>
      <listitem>
       <para>Sess√£o movida para outro servidor, ent√£o a opera√ß√£o √© ignorada.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.notreadonly">
      <term><constant>Zookeeper::NOTREADONLY</constant></term>
      <listitem>
       <para>Solicita√ß√£o de mudan√ßa de estado passada para servidor somente leitura.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.ephemeralonlocalsession">
      <term><constant>Zookeeper::EPHEMERALONLOCALSESSION</constant></term>
      <listitem>
       <para>Tentativa de criar um n√≥ ef√™mero em uma sess√£o local.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.nowatcher">
      <term><constant>Zookeeper::NOWATCHER</constant></term>
      <listitem>
       <para>O observador n√£o p√¥de ser encontrado.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.constants.reconfigdisabled">
      <term><constant>Zookeeper::RECONFIGDISABLED</constant></term>
      <listitem>
       <para>Tentiva de executar uma opera√ß√£o de reconfigura√ß√£o quando o recurso de reconfigura√ß√£o est√° desabilitado.</para>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>
<!-- }}} -->

  </section>

<!-- }}} -->

 </partintro>

 &reference.zookeeper.entities.zookeeper;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

