<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1f68eecaa7c4c723abe72a5a040ea7b15023a5aa Maintainer: leonardolara Status: ready -->
<section xml:id="intl.collator-constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 <para>
  <variablelist>
   <varlistentry xml:id="collator.constants.french-collation">
    <term>
     <constant>Collator::FRENCH_COLLATION</constant>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Ordena strings com diferentes acentuações a partir do final da string. Este
      atributo é automaticamente definido para
      <emphasis>ON</emphasis> (ligado)
      para as localidades francesas e algumas outras. Usuários normalmente não precisam
      definir explicitamente este atributo. Há um custo de desempenho de comparação
      de strings quando definida para <emphasis>ON</emphasis>,
      mas o comprimento da chave de ordenação não é afetado. Os valores possíveis são:
      <simplelist>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::OFF</constant>(padrão)</member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
     <para>
      <example>
       <title>Regras da FRENCH_COLLATION</title>
       <para>
        <simplelist>
         <member>F=OFF cote &lt; coté &lt; côte &lt; côté </member>
         <member>F=ON cote &lt; côte &lt; coté &lt; côté</member>
        </simplelist>
       </para>
      </example>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.alternate-handling">
    <term>
     <constant>Collator::ALTERNATE_HANDLING</constant>
    </term>
    <listitem>
     <para>
      O atributo alternativo é usado para controlar o gerenciamento dos chamados
      caracteres variáveis na UCA: espaços em branco, pontuações e símbolos. Se
      ALTERNATE_HANDLING (A) for definido para <emphasis>NON_IGNORABLE</emphasis>
      (N), as diferenças entre estes caracteres são da mesma importância
      que as diferenças entre letras. Se ALTERNATE_HANDLING for definida para
      <emphasis>SHIFTED</emphasis>
      (S), estes caracteres são somente de importância menor. O valor
      <emphasis>SHIFTED</emphasis> é frequentemente usado em combinação com
      <emphasis>STRENGTH</emphasis>
      definida para set to QUATERNARY. Neste caso, espaços em branco, pontuações e símbolos
      são considerados ao comparar strings, mas somente se todos os outros aspectos das
      strings (letras base, acentos e forma) forem idênticos. Se
      ALTERNATE_HANDLING não for definida para SHIFTED, não haverá diferença entre uma
      STRENGTH de 3 e uma STRENGTH de 4. Para mais informações e exemplos,
      consulte "Variable_Weighting" na
      <link xlink:href="&url.icu.uca;">UCA</link>.
      A razão pela qual os valores para ALTERNATE_HANDLING não são simplesmente
      <emphasis>ON</emphasis> (ligado) e <emphasis>OFF</emphasis> (desligado)
      é que valores adicionais podem ser necessários no futuro. A opção
      BLANKED da UCA é expressa com STRENGTH de 3, e ALTERNATE_HANDLING definida para
      SHIFTED. O padrão para a maioria das localidades é NON_IGNORABLE. Se SHIFTED for
      selecionado, pode ser mais lento se houver muitas strings que são as mesmas
      exceto pela pontuação; o comprimento da chave de ordenação não será afetado a menos que
      o nível de STRENGHT seja também aumentado.
     </para>
     <para>
      Os valores possíveis são:
      <simplelist>
       <member><constant>Collator::NON_IGNORABLE</constant>(padrão)</member>
       <member><constant>Collator::SHIFTED</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
     <para>
      <example>
       <title>Regras de ALTERNATE_HANDLING</title>
       <para>
        <simplelist>
         <member>
          S=3, A=N di Silva &lt; Di Silva &lt; diSilva &lt; U.S.A. &lt; USA
         </member>
         <member>
          S=3, A=S di Silva = diSilva &lt; Di Silva &lt; U.S.A. = USA
         </member>
         <member>
          S=4, A=S di Silva &lt; diSilva &lt; Di Silva &lt; U.S.A. &lt; USA
         </member>
        </simplelist>
       </para>
      </example>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.case-first">
    <term>
     <constant>Collator::CASE_FIRST</constant>
     <type>int</type>
    </term>
    <listitem>
     <para>
      O atributo CASE_FIRST é usado para controlar se letras maiúsculas
      vêm antes de letras minúsculas ou vice-versa, na ausência de outras
      diferenças nas strings. Os valores possíveis são
      <emphasis>UPPER_FIRST</emphasis> (maiúsculas primeiro - U)
      e <emphasis>LOWER_FIRST</emphasis> (minúsculas primeiro - L),
      mais o <emphasis>DEFAULT</emphasis> (padrão)
      e <emphasis>OFF</emphasis> (desligado - X).
      Quase não há diferença entre as opções OFF e LOWER_FIRST
      em termos de resultados, portanto tipicamente os usuários não usarão
      LOWER_FIRST: apenas OFF ou UPPER_FIRST. (Os interessados nas
      diferenças detalhadas entre X e L devem consultar a <literal>Collation
      Customization</literal> - Customização de Agrupamento). Especificar L ou U não afetará o desempenho de
      comparação de strings, mas afetará o comprimento da chave de ordenação.
     </para>
     <para>
      Os valores possíveis são:
      <simplelist>
       <member><constant>Collator::OFF</constant>(padrão)</member>
       <member><constant>Collator::LOWER_FIRST</constant></member>
       <member><constant>Collator::UPPER_FIRST</constant></member>
       <member><constant>Collator:DEFAULT</constant></member>
      </simplelist>
     </para>
     <para>
      <example>
       <title>Regras de CASE_FIRST</title>
       <para>
        <simplelist>
         <member>C=X ou C=L "china" &lt; "China" &lt; "denmark" &lt; "Denmark"</member>
         <member>C=U "China" &lt; "china" &lt; "Denmark" &lt; "denmark"</member>
        </simplelist>
       </para>
      </example>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.case-level">
    <term>
     <constant>Collator::CASE_LEVEL</constant>
     <type>int</type>
    </term>
    <listitem>
     <para>
      O atributo CASE_LEVEL é usado quando os acentos são ignorados mas as maiúsculas/minúsculas não são. Nesta
      situação, deve-se definir STRENGTH para <emphasis>PRIMARY</emphasis>,
      e CASE_LEVEL para <emphasis>ON</emphasis>.
      Na maioria das localidades, esta configuração é OFF por padrão. Existe um pequeno impacto
      no desempenho de comparação de strings e na chave de ordenação se este atributo for
      definido para <emphasis>ON</emphasis>.
     </para>
     <para>
      Os valores possíveis são:
      <simplelist>
       <member><constant>Collator::OFF</constant>(padrão)</member>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
     <para>
      <example>
       <title>Regras de CASE_LEVEL</title>
       <para>
        <simplelist>
         <member>S=1, E=X role = Role = rôle</member>
         <member>S=1, E=O role = rôle &lt; Role</member>
        </simplelist>
       </para>
      </example>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.normalization-mode">
    <term>
     <constant>Collator::NORMALIZATION_MODE</constant>
     <type>int</type>
    </term>
    <listitem>
     <para>
      A configuração NORMALIZATION_MODE determina se o texto está completamente
      normalizado ou não na comparação. Mesmo se a configuração esteja em OFF (que é
      o padrão para muitas localidades), texto como representado em uso comum irá
      comparar corretamente (para detalhes, consulte UTN #5). Somente se as marcas de acentos
      estiverem em ordem não canônica haverá problema. Se a configuração estiver em
      <emphasis>ON</emphasis>,
      os melhores resultados são garantidos para todas as entradas de texto possíveis.
      Existe um custo médio de desempenho na comparação de strings se este atributo
      estiver em <emphasis>ON</emphasis>,
      dependendo da frequência de sequências que requerem normalização.
      Não há efeito significativo no comprimento da chave de ordenação. Se for sabido que o texto de entrada
      está nas formas de normalização NFD ou NFKD, não há necessidade de
      habilitar esta opção de normalização.
     </para>
     <para>
      Os valores possíveis são:
      <simplelist>
       <member><constant>Collator::OFF</constant>(padrão)</member>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.strength">
    <term>
     <constant>Collator::STRENGTH</constant>
     <type>int</type>
    </term>
    <listitem>
     <para>
      O Serviço de Agrupamento ICU suporta vários níveis de comparação, chamados também
      de "Strengths" (forças). Ter estas categorias
      possibilita à ICU ordenar as strings de forma precisa conforme as convenções locais.
      Entretanto, ao permitir que os níveis sejam seletivamente empregados, a pesquisa
      por uma string no texto pode ser realizada com várias condições de correspondência.
      Para informações mais detalhadas, consulte o capítulo
      <function>collator_set_strength</function>.
     </para>
     <para>
      Os valores possíveis são:
      <simplelist>
       <member><constant>Collator::PRIMARY</constant></member>
       <member><constant>Collator::SECONDARY</constant></member>
       <member><constant>Collator::TERTIARY</constant>(padrão)</member>
       <member><constant>Collator::QUATERNARY</constant></member>
       <member><constant>Collator::IDENTICAL</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.hiragana-quaternary-mode">
    <term>
     <constant>Collator::HIRAGANA_QUATERNARY_MODE</constant>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Compatibilidade com JIS x 4061 requer a introdução de um nível
      adicional para distinguir caracteres Hiragana e Katakana. Se for requerida
      compatibilidade com o esse padrão, este atributo deve ser definido para
      <emphasis>ON</emphasis>,
      e a STRENGTH deve ser definida para QUATERNARY. Isto afetará o comprimento da chave de ordenação
      e desempenho de comparação de strings.
     </para>
     <para>
      Os valores possíveis são:
      <simplelist>
       <member><constant>Collator::OFF</constant>(padrão)</member>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.numeric-collation">
    <term>
     <constant>Collator::NUMERIC_COLLATION</constant>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Quando definido para ON, este atributo gera uma chave de agrupamento para o valor
      numérico de substrings de dígitos. Esta é uma maneira de obter '100' ordenado DEPOIS
      de '2'.
     </para>
     <para>
      Os valores possíveis são:
      <simplelist>
       <member><constant>Collator::OFF</constant>(padrão)</member>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.default-value">
    <term>
     <constant>Collator::DEFAULT_VALUE</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.primary">
    <term>
     <constant>Collator::PRIMARY</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.secondary">
    <term>
     <constant>Collator::SECONDARY</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.tertiary">
    <term>
     <constant>Collator::TERTIARY</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.default-strength">
    <term>
     <constant>Collator::DEFAULT_STRENGTH</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.quaternary">
    <term>
     <constant>Collator::QUATERNARY</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.identical">
    <term>
     <constant>Collator::IDENTICAL</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.off">
    <term>
     <constant>Collator::OFF</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.on">
    <term>
     <constant>Collator::ON</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.shifted">
    <term>
     <constant>Collator::SHIFTED</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.non-ignorable">
    <term>
     <constant>Collator::NON_IGNORABLE</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.lower-first">
    <term>
     <constant>Collator::LOWER_FIRST</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.upper-first">
    <term>
     <constant>Collator::UPPER_FIRST</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.sort-regular">
    <term>
     <constant>Collator::SORT_REGULAR</constant>
     <type>int</type>
    </term>
    <listitem>
     <para/>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.sort-string">
    <term>
     <constant>Collator::SORT_STRING</constant>
     <type>int</type>
    </term>
    <listitem>
     <para/>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.sort-numeric">
    <term>
     <constant>Collator::SORT_NUMERIC</constant>
     <type>int</type>
    </term>
    <listitem>
     <para/>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</section>
